---
- hosts: all
  become: true
  vars:
    apache_config_file: site.apache.conf
    requirements_file: requirements.txt
  tasks:
  - name: Update apt cache
    apt: update_cache=yes

  - name: Install https transport
    apt:
      name: apt-transport-https
      state: present
      update_cache: yes

  - name: Ensure python-software-properties is installed
    apt: pkg=python-software-properties state=present

  # Add signing keys
  - apt_key:
      url: "{{ item }}"
      state: present
    loop:
      - https://packages.sury.org/php/apt.gpg
      - https://packages.erlang-solutions.com/debian/erlang_solutions.asc
      - https://www.rabbitmq.com/rabbitmq-release-signing-key.asc

  # Add Erlang, RabbitMQ and PHP repositories
  - apt_repository:
      repo: "{{ item }}"
      state: present
      update_cache: yes
    loop:
      - deb https://packages.erlang-solutions.com/debian jessie contrib
      - deb https://dl.bintray.com/rabbitmq/debian jessie main
      - deb https://packages.sury.org/php/ jessie main

  - name: Install packages
    apt:
      name: "{{ item }}"
      update_cache: yes
      state: latest
    loop:
      - erlang
      - rabbitmq-server
      - apache2
      - libapache2-mod-wsgi-py3
      - python3-pip

  - name: Install 'virtualenv' package
    pip:
      name: virtualenv
      executable: pip3

  - name: Create site folder
    file: path=/home/vagrant/site state=directory mode=0775
    become: true
    become_user: vagrant

  - name: Create src folder
    file: path=/home/vagrant/site/src state=directory mode=0775
    become: true
    become_user: vagrant

  - name: Create virtual env
    shell: chdir=/home/vagrant/site/src virtualenv --python=python3 env
    become: true
    become_user: vagrant

  # TODO: Possibly handle virtual env activation and package installation?
  
  # - name: Activate virtual env
  #   shell: 
  #     cmd: source /home/vagrant/site/src/env/bin/activate
  # 
  # - name: Install needed Python packages to env
  #   pip:
  #     requirements: "{{ requirements_file }}"
    
  # - name: Install needed Python packages to env
  #   pip: 
  #     name: "{{ item }}"
  #   loop:
  #     - flask==1.0.2
  #     - flask_restful==0.3.6
  #     - flask_script==2.0.6
  #     - marshmallow==2.14.0
  #     - flask_marshmallow==0.8.0

  # Apache
  - name: Enabled mod_rewrite
    apache2_module: name=rewrite state=present
    notify:
      - restart apache2

  - name: Move Apache configuration to quest
    copy: src="{{ apache_config_file }}" dest=/etc/apache2/sites-available/dev-site.conf
    notify:
      - restart apache2

  - name: Apply Apache configuration
    command: a2ensite dev-site
    args:
      creates: /etc/apache2/sites-enabled/dev-site.conf
    notify:
      - restart apache2

  - name: Disable default Apache configuration
    command: a2dissite 000-default
    args:
      removes: /etc/apache2/sites-enabled/000-default.conf
    notify:
      - restart apache2

  - name: Link www to home folder
    file: src=/home/vagrant/site path=/var/www/site state=link force=yes

  - name: Enables the rabbitmq_management plugin
    rabbitmq_plugin:
      names: rabbitmq_management
      state: enabled

  # Add user to server and assign full access control on / vhost.
  - name: Add user
    rabbitmq_user:
      user: admin
      password: admin
      vhost: /
      configure_priv: .*
      read_priv: .*
      write_priv: .*
      state: present
      tags: administrator, management

  - name: Remove default guest user
    rabbitmq_user:
      user: guest
      state: absent

  # PHP
  - name: Install PHP7.2
    apt:
      name: "{{ item }}"
      state: latest
      allow_unauthenticated: yes
    loop:
      - php7.2
      - php7.2-bz2
      - php7.2-bcmath
      - php7.2-curl
      - php7.2-cli
      - php7.2-dba
      - php7.2-imap
      - php7.2-intl
      - php7.2-json
      - php7.2-mbstring
      - php7.2-mysql
      - php7.2-odbc
      - php7.2-soap
      - php7.2-xml
      - php7.2-zip

  # Composer
  - name: Install composer
    shell: curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
    args:
      creates: /usr/local/bin/composer

  handlers:
  - name: restart rabbitmq
    service: name=rabbitmq-server state=restarted

  - name: restart apache2
    service: name=apache2 state=restarted